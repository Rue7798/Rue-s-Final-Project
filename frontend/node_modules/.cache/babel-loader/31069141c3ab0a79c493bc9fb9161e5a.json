{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProductionDslName = exports.isBranchingProd = exports.isOptionalProd = exports.isSequenceProd = void 0;\n\nvar some_1 = __importDefault(require(\"lodash/some\"));\n\nvar every_1 = __importDefault(require(\"lodash/every\"));\n\nvar includes_1 = __importDefault(require(\"lodash/includes\"));\n\nvar model_1 = require(\"./model\");\n\nfunction isSequenceProd(prod) {\n  return prod instanceof model_1.Alternative || prod instanceof model_1.Option || prod instanceof model_1.Repetition || prod instanceof model_1.RepetitionMandatory || prod instanceof model_1.RepetitionMandatoryWithSeparator || prod instanceof model_1.RepetitionWithSeparator || prod instanceof model_1.Terminal || prod instanceof model_1.Rule;\n}\n\nexports.isSequenceProd = isSequenceProd;\n\nfunction isOptionalProd(prod, alreadyVisited) {\n  if (alreadyVisited === void 0) {\n    alreadyVisited = [];\n  }\n\n  var isDirectlyOptional = prod instanceof model_1.Option || prod instanceof model_1.Repetition || prod instanceof model_1.RepetitionWithSeparator;\n\n  if (isDirectlyOptional) {\n    return true;\n  } // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n\n\n  if (prod instanceof model_1.Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return (0, some_1.default)(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else if (prod instanceof model_1.NonTerminal && (0, includes_1.default)(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false;\n  } else if (prod instanceof model_1.AbstractProduction) {\n    if (prod instanceof model_1.NonTerminal) {\n      alreadyVisited.push(prod);\n    }\n\n    return (0, every_1.default)(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else {\n    return false;\n  }\n}\n\nexports.isOptionalProd = isOptionalProd;\n\nfunction isBranchingProd(prod) {\n  return prod instanceof model_1.Alternation;\n}\n\nexports.isBranchingProd = isBranchingProd;\n\nfunction getProductionDslName(prod) {\n  /* istanbul ignore else */\n  if (prod instanceof model_1.NonTerminal) {\n    return \"SUBRULE\";\n  } else if (prod instanceof model_1.Option) {\n    return \"OPTION\";\n  } else if (prod instanceof model_1.Alternation) {\n    return \"OR\";\n  } else if (prod instanceof model_1.RepetitionMandatory) {\n    return \"AT_LEAST_ONE\";\n  } else if (prod instanceof model_1.RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\";\n  } else if (prod instanceof model_1.RepetitionWithSeparator) {\n    return \"MANY_SEP\";\n  } else if (prod instanceof model_1.Repetition) {\n    return \"MANY\";\n  } else if (prod instanceof model_1.Terminal) {\n    return \"CONSUME\";\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nexports.getProductionDslName = getProductionDslName;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\Rue's Final Project\\frontend\\node_modules\\@chevrotain\\gast\\src\\helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import some from \"lodash/some\"\nimport every from \"lodash/every\"\nimport has from \"lodash/has\"\nimport includes from \"lodash/includes\"\nimport {\n  AbstractProduction,\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"./model\"\nimport { GAstVisitor } from \"./visitor\"\nimport { IProduction, IProductionWithOccurrence } from \"@chevrotain/types\"\n\nexport function isSequenceProd(\n  prod: IProduction\n): prod is { definition: IProduction[] } & IProduction {\n  return (\n    prod instanceof Alternative ||\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionMandatory ||\n    prod instanceof RepetitionMandatoryWithSeparator ||\n    prod instanceof RepetitionWithSeparator ||\n    prod instanceof Terminal ||\n    prod instanceof Rule\n  )\n}\n\nexport function isOptionalProd(\n  prod: IProduction,\n  alreadyVisited: NonTerminal[] = []\n): boolean {\n  const isDirectlyOptional =\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionWithSeparator\n  if (isDirectlyOptional) {\n    return true\n  }\n\n  // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n  if (prod instanceof Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return some((<Alternation>prod).definition, (subProd: IProduction) => {\n      return isOptionalProd(subProd, alreadyVisited)\n    })\n  } else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false\n  } else if (prod instanceof AbstractProduction) {\n    if (prod instanceof NonTerminal) {\n      alreadyVisited.push(prod)\n    }\n    return every(\n      (<AbstractProduction>prod).definition,\n      (subProd: IProduction) => {\n        return isOptionalProd(subProd, alreadyVisited)\n      }\n    )\n  } else {\n    return false\n  }\n}\n\nexport function isBranchingProd(\n  prod: IProduction\n): prod is { definition: IProduction[] } & IProduction {\n  return prod instanceof Alternation\n}\n\nexport function getProductionDslName(prod: IProductionWithOccurrence): string {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    return \"SUBRULE\"\n  } else if (prod instanceof Option) {\n    return \"OPTION\"\n  } else if (prod instanceof Alternation) {\n    return \"OR\"\n  } else if (prod instanceof RepetitionMandatory) {\n    return \"AT_LEAST_ONE\"\n  } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\"\n  } else if (prod instanceof RepetitionWithSeparator) {\n    return \"MANY_SEP\"\n  } else if (prod instanceof Repetition) {\n    return \"MANY\"\n  } else if (prod instanceof Terminal) {\n    return \"CONSUME\"\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n"]},"metadata":{},"sourceType":"script"}