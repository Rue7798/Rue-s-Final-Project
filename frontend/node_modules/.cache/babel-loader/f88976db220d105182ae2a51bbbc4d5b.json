{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Rue's Final Project\\\\frontend\\\\src\\\\Shop.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './Shop.css';\nimport { BiShekel } from \"react-icons/bi\"; // productId\tproductImg\tproductType\tproductName\tproductPrice\t\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Shop() {\n  _s();\n\n  const [products, setproducts] = useState([{\n    productId: \"\",\n    productImg: \"\",\n    productType: \"\",\n    productName: \"\",\n    productPrice: \"\"\n  }]); // use get request to post the products from the DB(get request)\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/getallproducts').then(products => {\n      setproducts(products.data);\n      console.log(products);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"products\",\n    children: products && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: products.map((curr, i) => {\n        console.log(curr);\n        return /*#__PURE__*/_jsxDEV(Productscard, { ...curr\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Shop, \"OfTtPNtcOrumkBKzRn4Nokir64g=\");\n\n_c = Shop;\n\nconst Productscard = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productscard\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        className: \"productName\",\n        children: [\"  \", props.productName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.productImg,\n          alt: props.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        className: \"productPrice\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(BiShekel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 78\n        }, this), props.productPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: 'p-' + props.productId,\n        className: \"quantityinput\",\n        type: \"number\",\n        min: \"1\",\n        defaultValue: \"1\",\n        placeholder: \"Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: props.productId,\n        className: \"submitproductbtn\",\n        type: \"button\",\n        onClick: async e => {\n          console.log(\"Running\");\n          await axios.get('http://localhost:3001/getallproducts').then(products => {\n            for (let i = 0; i < products.data.length; i++) {\n              if (parseInt(e.target.id) === parseInt(products.data[i].productId)) {\n                let data = {\n                  productId: products.data[i].productId,\n                  productImg: products.data[i].productImg,\n                  productPrice: products.data[i].productPrice,\n                  productType: products.data[i].productType,\n                  productQuantity: document.getElementById('p-' + products.data[i].productId).value\n                };\n                console.log(data);\n                alert(\"Product Added to Cart\\n Product ID :\" + data.productId + \"\\nProduct Name :\" + products.data[i].productName + \"\\n\" + \"Product Quantity :\" + data.productQuantity + \"\\n\" + \"Product Price :\" + data.productPrice);\n              }\n            }\n          });\n        },\n        children: \" Add to Cart \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}; // import ButtonGroup from \"@material-ui/core/ButtonGroup\";\n// import Badge from \"@material-ui/core/Badge\";\n// import ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n// import Button from \"@material-ui/core/Button\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import RemoveIcon from \"@material-ui/icons/Remove\";\n// export default function Shoppingcart() {\n//     const [itemCount, setItemCount] = React.useState(1);\n//     return (\n//         <div style={{ display: \"block\", padding: 30 }}>\n//             <div>\n//                 <Badge color=\"secondary\" badgeContent={itemCount}>\n//                     <ShoppingCartIcon />{\" \"}\n//                 </Badge>\n//                 <ButtonGroup>\n//                     <Button\n//                         onClick={() => {\n//                             setItemCount(Math.max(itemCount - 1, 0));\n//                         }}\n//                     >\n//                         {\" \"}\n//                         <RemoveIcon fontSize=\"small\" />\n//                     </Button>\n//                     <Button\n//                         onClick={() => {\n//                             setItemCount(itemCount + 1);\n//                         }}\n//                     >\n//                         {\" \"}\n//                         <AddIcon fontSize=\"small\" />\n//                     </Button>\n//                 </ButtonGroup>\n//             </div>\n//         </div>\n//     );\n// }\n\n\n_c2 = Productscard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop\");\n$RefreshReg$(_c2, \"Productscard\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Rue's Final Project/frontend/src/Shop.tsx"],"names":["axios","useEffect","useState","BiShekel","Shop","products","setproducts","productId","productImg","productType","productName","productPrice","get","then","data","console","log","map","curr","i","Productscard","props","fontWeight","e","length","parseInt","target","id","productQuantity","document","getElementById","value","alert"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport './Shop.css';\r\nimport { BiShekel } from \"react-icons/bi\"\r\n\r\n// productId\tproductImg\tproductType\tproductName\tproductPrice\t\r\n\r\n\r\nexport function Shop() {\r\n    const [products, setproducts] = useState([{\r\n        productId: \"\",\r\n        productImg: \"\",\r\n        productType: \"\",\r\n        productName: \"\",\r\n        productPrice: \"\",\r\n    }]);\r\n\r\n\r\n\r\n\r\n\r\n    // use get request to post the products from the DB(get request)\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/getallproducts')\r\n            .then(products => {\r\n                setproducts(products.data);\r\n                console.log(products);\r\n            });\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className='products'>\r\n            {products && <div>\r\n                {products.map((curr, i) => {\r\n                    console.log(curr);\r\n                    return <Productscard key={i}{...curr}></Productscard>;\r\n\r\n\r\n                })}\r\n\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Productscard = (props: {\r\n\r\n    productId: string,\r\n    productImg: string,\r\n    productType: string,\r\n    productName: string,\r\n    productPrice: string,\r\n\r\n}) => {\r\n\r\n\r\n    return (\r\n        <div className='productscard'>\r\n            <ul>\r\n                <li style={{ fontWeight: \"bold\" }} className='productName'>  {props.productName} </li>\r\n                <li> <img src={props.productImg} alt={props.productName} /></li>\r\n                <li style={{ fontWeight: \"bold\" }} className='productPrice'> <BiShekel></BiShekel>{props.productPrice}</li>\r\n\r\n\r\n                <input id={'p-' + props.productId} className='quantityinput' type=\"number\" min=\"1\" defaultValue=\"1\" placeholder=\"Quantity\" />\r\n                <button id={props.productId} className=\"submitproductbtn\" type=\"button\" onClick={async (e) => {\r\n\r\n                    console.log(\"Running\");\r\n                    await axios.get('http://localhost:3001/getallproducts')\r\n                        .then(products => {\r\n\r\n                            for (let i = 0; i < products.data.length; i++) {\r\n\r\n                                if (parseInt((e.target as Element).id) === parseInt(products.data[i].productId)) {\r\n\r\n                                    let data = {\r\n                                        productId: products.data[i].productId,\r\n                                        productImg: products.data[i].productImg,\r\n                                        productPrice: products.data[i].productPrice,\r\n                                        productType: products.data[i].productType,\r\n                                        productQuantity: (document.getElementById('p-' + products.data[i].productId) as HTMLInputElement).value\r\n                                    }\r\n\r\n                                    console.log(data);\r\n                                    alert(\"Product Added to Cart\\n Product ID :\" + data.productId + \"\\nProduct Name :\" + products.data[i].productName + \"\\n\" + \"Product Quantity :\" + data.productQuantity + \"\\n\" + \"Product Price :\" + data.productPrice);\r\n\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                }}> Add to Cart </button>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// import ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n// import Badge from \"@material-ui/core/Badge\";\r\n// import ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import RemoveIcon from \"@material-ui/icons/Remove\";\r\n\r\n// export default function Shoppingcart() {\r\n//     const [itemCount, setItemCount] = React.useState(1);\r\n\r\n//     return (\r\n//         <div style={{ display: \"block\", padding: 30 }}>\r\n//             <div>\r\n//                 <Badge color=\"secondary\" badgeContent={itemCount}>\r\n//                     <ShoppingCartIcon />{\" \"}\r\n//                 </Badge>\r\n//                 <ButtonGroup>\r\n//                     <Button\r\n//                         onClick={() => {\r\n//                             setItemCount(Math.max(itemCount - 1, 0));\r\n//                         }}\r\n//                     >\r\n//                         {\" \"}\r\n//                         <RemoveIcon fontSize=\"small\" />\r\n//                     </Button>\r\n//                     <Button\r\n//                         onClick={() => {\r\n//                             setItemCount(itemCount + 1);\r\n//                         }}\r\n//                     >\r\n//                         {\" \"}\r\n//                         <AddIcon fontSize=\"small\" />\r\n//                     </Button>\r\n//                 </ButtonGroup>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }"]},"metadata":{},"sourceType":"module"}