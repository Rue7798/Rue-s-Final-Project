{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.collectMethods = exports.LooksAhead = void 0;\n\nvar lookahead_1 = require(\"../../grammar/lookahead\");\n\nvar forEach_1 = __importDefault(require(\"lodash/forEach\"));\n\nvar has_1 = __importDefault(require(\"lodash/has\"));\n\nvar parser_1 = require(\"../parser\");\n\nvar keys_1 = require(\"../../grammar/keys\");\n\nvar gast_1 = require(\"@chevrotain/gast\");\n\nvar gast_2 = require(\"@chevrotain/gast\");\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\n\n\nvar LooksAhead =\n/** @class */\nfunction () {\n  function LooksAhead() {}\n\n  LooksAhead.prototype.initLooksAhead = function (config) {\n    this.dynamicTokensEnabled = (0, has_1.default)(config, \"dynamicTokensEnabled\") ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n    : parser_1.DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n    this.maxLookahead = (0, has_1.default)(config, \"maxLookahead\") ? config.maxLookahead // assumes end user provides the correct config value/type\n    : parser_1.DEFAULT_PARSER_CONFIG.maxLookahead;\n    this.lookAheadFuncsCache = new Map();\n  };\n\n  LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {\n    var _this = this;\n\n    (0, forEach_1.default)(rules, function (currRule) {\n      _this.TRACE_INIT(\"\".concat(currRule.name, \" Rule Lookahead\"), function () {\n        var _a = collectMethods(currRule),\n            alternation = _a.alternation,\n            repetition = _a.repetition,\n            option = _a.option,\n            repetitionMandatory = _a.repetitionMandatory,\n            repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator,\n            repetitionWithSeparator = _a.repetitionWithSeparator;\n\n        (0, forEach_1.default)(alternation, function (currProd) {\n          var prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n\n          _this.TRACE_INIT(\"\".concat((0, gast_2.getProductionDslName)(currProd)).concat(prodIdx), function () {\n            var laFunc = (0, lookahead_1.buildLookaheadFuncForOr)(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);\n            var key = (0, keys_1.getKeyForAutomaticLookahead)(_this.fullRuleNameToShort[currRule.name], keys_1.OR_IDX, currProd.idx);\n\n            _this.setLaFuncCache(key, laFunc);\n          });\n        });\n        (0, forEach_1.default)(repetition, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, keys_1.MANY_IDX, lookahead_1.PROD_TYPE.REPETITION, currProd.maxLookahead, (0, gast_2.getProductionDslName)(currProd));\n        });\n        (0, forEach_1.default)(option, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, keys_1.OPTION_IDX, lookahead_1.PROD_TYPE.OPTION, currProd.maxLookahead, (0, gast_2.getProductionDslName)(currProd));\n        });\n        (0, forEach_1.default)(repetitionMandatory, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, keys_1.AT_LEAST_ONE_IDX, lookahead_1.PROD_TYPE.REPETITION_MANDATORY, currProd.maxLookahead, (0, gast_2.getProductionDslName)(currProd));\n        });\n        (0, forEach_1.default)(repetitionMandatoryWithSeparator, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, keys_1.AT_LEAST_ONE_SEP_IDX, lookahead_1.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, (0, gast_2.getProductionDslName)(currProd));\n        });\n        (0, forEach_1.default)(repetitionWithSeparator, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, keys_1.MANY_SEP_IDX, lookahead_1.PROD_TYPE.REPETITION_WITH_SEPARATOR, currProd.maxLookahead, (0, gast_2.getProductionDslName)(currProd));\n        });\n      });\n    });\n  };\n\n  LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n    var _this = this;\n\n    this.TRACE_INIT(\"\".concat(dslMethodName).concat(prodOccurrence === 0 ? \"\" : prodOccurrence), function () {\n      var laFunc = (0, lookahead_1.buildLookaheadFuncForOptionalProd)(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);\n      var key = (0, keys_1.getKeyForAutomaticLookahead)(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n\n      _this.setLaFuncCache(key, laFunc);\n    });\n  };\n\n  LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n    return (0, lookahead_1.buildSingleAlternativeLookaheadFunction)(alt, tokenMatcher, dynamicTokensEnabled);\n  };\n\n  LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    return (0, lookahead_1.buildAlternativesLookAheadFunc)(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n  }; // this actually returns a number, but it is always used as a string (object prop key)\n\n\n  LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n    var currRuleShortName = this.getLastExplicitRuleShortName();\n    return (0, keys_1.getKeyForAutomaticLookahead)(currRuleShortName, dslMethodIdx, occurrence);\n  };\n\n  LooksAhead.prototype.getLaFuncFromCache = function (key) {\n    return this.lookAheadFuncsCache.get(key);\n  };\n  /* istanbul ignore next */\n\n\n  LooksAhead.prototype.setLaFuncCache = function (key, value) {\n    this.lookAheadFuncsCache.set(key, value);\n  };\n\n  return LooksAhead;\n}();\n\nexports.LooksAhead = LooksAhead;\n\nvar DslMethodsCollectorVisitor =\n/** @class */\nfunction (_super) {\n  __extends(DslMethodsCollectorVisitor, _super);\n\n  function DslMethodsCollectorVisitor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: []\n    };\n    return _this;\n  }\n\n  DslMethodsCollectorVisitor.prototype.reset = function () {\n    this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: []\n    };\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitOption = function (option) {\n    this.dslMethods.option.push(option);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (manySep) {\n    this.dslMethods.repetitionWithSeparator.push(manySep);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (atLeastOne) {\n    this.dslMethods.repetitionMandatory.push(atLeastOne);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n    this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitRepetition = function (many) {\n    this.dslMethods.repetition.push(many);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitAlternation = function (or) {\n    this.dslMethods.alternation.push(or);\n  };\n\n  return DslMethodsCollectorVisitor;\n}(gast_1.GAstVisitor);\n\nvar collectorVisitor = new DslMethodsCollectorVisitor();\n\nfunction collectMethods(rule) {\n  collectorVisitor.reset();\n  rule.accept(collectorVisitor);\n  var dslMethods = collectorVisitor.dslMethods; // avoid uncleaned references\n\n  collectorVisitor.reset();\n  return dslMethods;\n}\n\nexports.collectMethods = collectMethods;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\Rue's Final Project\\frontend\\node_modules\\chevrotain\\src\\parse\\parser\\traits\\looksahead.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  buildAlternativesLookAheadFunc,\n  buildLookaheadFuncForOptionalProd,\n  buildLookaheadFuncForOr,\n  buildSingleAlternativeLookaheadFunction,\n  PROD_TYPE\n} from \"../../grammar/lookahead\"\nimport forEach from \"lodash/forEach\"\nimport has from \"lodash/has\"\nimport {\n  DEFAULT_PARSER_CONFIG,\n  LookAheadSequence,\n  TokenMatcher\n} from \"../parser\"\nimport { IOrAlt, IParserConfig } from \"@chevrotain/types\"\nimport {\n  AT_LEAST_ONE_IDX,\n  AT_LEAST_ONE_SEP_IDX,\n  getKeyForAutomaticLookahead,\n  MANY_IDX,\n  MANY_SEP_IDX,\n  OPTION_IDX,\n  OR_IDX\n} from \"../../grammar/keys\"\nimport { MixedInParser } from \"./parser_traits\"\nimport {\n  Alternation,\n  GAstVisitor,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule\n} from \"@chevrotain/gast\"\nimport { getProductionDslName } from \"@chevrotain/gast\"\n\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n  maxLookahead: number\n  lookAheadFuncsCache: any\n  dynamicTokensEnabled: boolean\n\n  initLooksAhead(config: IParserConfig) {\n    this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n      ? (config.dynamicTokensEnabled as boolean) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled\n\n    this.maxLookahead = has(config, \"maxLookahead\")\n      ? (config.maxLookahead as number) // assumes end user provides the correct config value/type\n      : DEFAULT_PARSER_CONFIG.maxLookahead\n\n    this.lookAheadFuncsCache = new Map()\n  }\n\n  preComputeLookaheadFunctions(this: MixedInParser, rules: Rule[]): void {\n    forEach(rules, (currRule) => {\n      this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n        const {\n          alternation,\n          repetition,\n          option,\n          repetitionMandatory,\n          repetitionMandatoryWithSeparator,\n          repetitionWithSeparator\n        } = collectMethods(currRule)\n\n        forEach(alternation, (currProd) => {\n          const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx\n          this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n            const laFunc = buildLookaheadFuncForOr(\n              currProd.idx,\n              currRule,\n              currProd.maxLookahead || this.maxLookahead,\n              currProd.hasPredicates,\n              this.dynamicTokensEnabled,\n              this.lookAheadBuilderForAlternatives\n            )\n\n            const key = getKeyForAutomaticLookahead(\n              this.fullRuleNameToShort[currRule.name],\n              OR_IDX,\n              currProd.idx\n            )\n            this.setLaFuncCache(key, laFunc)\n          })\n        })\n\n        forEach(repetition, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            MANY_IDX,\n            PROD_TYPE.REPETITION,\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n\n        forEach(option, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            OPTION_IDX,\n            PROD_TYPE.OPTION,\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n\n        forEach(repetitionMandatory, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            AT_LEAST_ONE_IDX,\n            PROD_TYPE.REPETITION_MANDATORY,\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n\n        forEach(repetitionMandatoryWithSeparator, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            AT_LEAST_ONE_SEP_IDX,\n            PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n\n        forEach(repetitionWithSeparator, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            MANY_SEP_IDX,\n            PROD_TYPE.REPETITION_WITH_SEPARATOR,\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n      })\n    })\n  }\n\n  computeLookaheadFunc(\n    this: MixedInParser,\n    rule: Rule,\n    prodOccurrence: number,\n    prodKey: number,\n    prodType: PROD_TYPE,\n    prodMaxLookahead: number | undefined,\n    dslMethodName: string\n  ): void {\n    this.TRACE_INIT(\n      `${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`,\n      () => {\n        const laFunc = buildLookaheadFuncForOptionalProd(\n          prodOccurrence,\n          rule,\n          prodMaxLookahead || this.maxLookahead,\n          this.dynamicTokensEnabled,\n          prodType,\n          this.lookAheadBuilderForOptional\n        )\n        const key = getKeyForAutomaticLookahead(\n          this.fullRuleNameToShort[rule.name],\n          prodKey,\n          prodOccurrence\n        )\n        this.setLaFuncCache(key, laFunc)\n      }\n    )\n  }\n\n  lookAheadBuilderForOptional(\n    this: MixedInParser,\n    alt: LookAheadSequence,\n    tokenMatcher: TokenMatcher,\n    dynamicTokensEnabled: boolean\n  ): () => boolean {\n    return buildSingleAlternativeLookaheadFunction(\n      alt,\n      tokenMatcher,\n      dynamicTokensEnabled\n    )\n  }\n\n  lookAheadBuilderForAlternatives(\n    this: MixedInParser,\n    alts: LookAheadSequence[],\n    hasPredicates: boolean,\n    tokenMatcher: TokenMatcher,\n    dynamicTokensEnabled: boolean\n  ): (orAlts: IOrAlt<any>[]) => number | undefined {\n    return buildAlternativesLookAheadFunc(\n      alts,\n      hasPredicates,\n      tokenMatcher,\n      dynamicTokensEnabled\n    )\n  }\n\n  // this actually returns a number, but it is always used as a string (object prop key)\n  getKeyForAutomaticLookahead(\n    this: MixedInParser,\n    dslMethodIdx: number,\n    occurrence: number\n  ): number {\n    const currRuleShortName: any = this.getLastExplicitRuleShortName()\n    return getKeyForAutomaticLookahead(\n      currRuleShortName,\n      dslMethodIdx,\n      occurrence\n    )\n  }\n\n  getLaFuncFromCache(this: MixedInParser, key: number): Function {\n    return this.lookAheadFuncsCache.get(key)\n  }\n\n  /* istanbul ignore next */\n  setLaFuncCache(this: MixedInParser, key: number, value: Function): void {\n    this.lookAheadFuncsCache.set(key, value)\n  }\n}\n\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n  public dslMethods: {\n    option: Option[]\n    alternation: Alternation[]\n    repetition: Repetition[]\n    repetitionWithSeparator: RepetitionWithSeparator[]\n    repetitionMandatory: RepetitionMandatory[]\n    repetitionMandatoryWithSeparator: RepetitionMandatoryWithSeparator[]\n  } = {\n    option: [],\n    alternation: [],\n    repetition: [],\n    repetitionWithSeparator: [],\n    repetitionMandatory: [],\n    repetitionMandatoryWithSeparator: []\n  }\n\n  reset() {\n    this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: []\n    }\n  }\n\n  public visitOption(option: Option): void {\n    this.dslMethods.option.push(option)\n  }\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.dslMethods.repetitionWithSeparator.push(manySep)\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.dslMethods.repetitionMandatory.push(atLeastOne)\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator\n  ): void {\n    this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep)\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.dslMethods.repetition.push(many)\n  }\n\n  public visitAlternation(or: Alternation): void {\n    this.dslMethods.alternation.push(or)\n  }\n}\n\nconst collectorVisitor = new DslMethodsCollectorVisitor()\nexport function collectMethods(rule: Rule): {\n  option: Option[]\n  alternation: Alternation[]\n  repetition: Repetition[]\n  repetitionWithSeparator: RepetitionWithSeparator[]\n  repetitionMandatory: RepetitionMandatory[]\n  repetitionMandatoryWithSeparator: RepetitionMandatoryWithSeparator[]\n} {\n  collectorVisitor.reset()\n  rule.accept(collectorVisitor)\n  const dslMethods = collectorVisitor.dslMethods\n  // avoid uncleaned references\n  collectorVisitor.reset()\n  return <any>dslMethods\n}\n"]},"metadata":{},"sourceType":"script"}