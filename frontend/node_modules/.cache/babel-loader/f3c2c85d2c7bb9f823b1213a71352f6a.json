{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Rue's Final Project\\\\frontend\\\\src\\\\clayplate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Model(props) {\n  _s();\n\n  const group = useRef();\n  const {\n    nodes,\n    materials\n  } = useGLTF(\"/clayplate.gltf\");\n  const [colour, setColour] = useState(\"#000080\");\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    ...props,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: [-Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n        geometry: nodes.Object_2.geometry,\n        material: nodes.Object_2.material,\n        position: [-0.0037, 0.0251, -0.0048],\n        children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n          onClick: () => {\n            colour === \"#000080\" ? setColour(\"#fff5ee\") : setColour(\"#000080\");\n          },\n          geometry: nodes.Object_2.geometry,\n          material: nodes.Object_2.material,\n          \"material-color\": colour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes.Object_2.geometry,\n        material: materials.defaultMat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Model, \"Sc1IPZ5u1Y1sO8jBqYq2YYL2FnY=\", false, function () {\n  return [useGLTF];\n});\n\n_c = Model;\nuseGLTF.preload(\"/clayplate.gltf\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Model\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Rue's Final Project/frontend/src/clayplate.js"],"names":["React","useState","useRef","useGLTF","Model","props","group","nodes","materials","colour","setColour","Math","PI","Object_2","geometry","material","defaultMat","preload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACjC,QAAMC,KAAK,GAAGJ,MAAM,EAApB;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBL,OAAO,CAAC,iBAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,SAAD,CAApC;AAEA,sBACI;AAAO,IAAA,GAAG,EAAEK,KAAZ;AAAA,OAAuBD,KAAvB;AAA8B,IAAA,OAAO,EAAE,IAAvC;AAAA,2BACI;AAAO,MAAA,QAAQ,EAAE,CAAC,CAACM,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAjB;AAAA,8BACI;AAAM,QAAA,QAAQ,EAAEL,KAAK,CAACM,QAAN,CAAeC,QAA/B;AAAyC,QAAA,QAAQ,EAAEP,KAAK,CAACM,QAAN,CAAeE,QAAlE;AAA4E,QAAA,QAAQ,EAAE,CAAC,CAAC,MAAF,EAAU,MAAV,EAAkB,CAAC,MAAnB,CAAtF;AAAA,+BACI;AAAM,UAAA,OAAO,EAAE,MAAM;AAAEN,YAAAA,MAAM,KAAK,SAAX,GAAuBC,SAAS,CAAC,SAAD,CAAhC,GAA8CA,SAAS,CAAC,SAAD,CAAvD;AAAoE,WAA3F;AAA6F,UAAA,QAAQ,EAAEH,KAAK,CAACM,QAAN,CAAeC,QAAtH;AAAgI,UAAA,QAAQ,EAAEP,KAAK,CAACM,QAAN,CAAeE,QAAzJ;AAAmK,4BAAgBN;AAAnL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AACI,QAAA,UAAU,MADd;AAEI,QAAA,aAAa,MAFjB;AAGI,QAAA,QAAQ,EAAEF,KAAK,CAACM,QAAN,CAAeC,QAH7B;AAII,QAAA,QAAQ,EAAEN,SAAS,CAACQ;AAJxB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GApBuBZ,K;UAESD,O;;;KAFTC,K;AAsBxBD,OAAO,CAACc,OAAR,CAAgB,iBAAhB","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nexport default function Model(props) {\r\n    const group = useRef()\r\n    const { nodes, materials } = useGLTF(\"/clayplate.gltf\")\r\n    const [colour, setColour] = useState(\"#000080\")\r\n\r\n    return (\r\n        <group ref={group} {...props} dispose={null}>\r\n            <group rotation={[-Math.PI / 2, 0, 0]}>\r\n                <mesh geometry={nodes.Object_2.geometry} material={nodes.Object_2.material} position={[-0.0037, 0.0251, -0.0048]}>\r\n                    <mesh onClick={() => { colour === \"#000080\" ? setColour(\"#fff5ee\") : setColour(\"#000080\") }} geometry={nodes.Object_2.geometry} material={nodes.Object_2.material} material-color={colour} />\r\n                </mesh>\r\n                <mesh\r\n                    castShadow\r\n                    receiveShadow\r\n                    geometry={nodes.Object_2.geometry}\r\n                    material={materials.defaultMat}\r\n                />\r\n            </group>\r\n        </group>\r\n    );\r\n}\r\n\r\nuseGLTF.preload(\"/clayplate.gltf\")\r\n"]},"metadata":{},"sourceType":"module"}